#!/bin/bash

echo "🎯 日历表单布局优化验证"
echo "========================"

# 检查前端服务是否运行
echo "1. 检查前端服务状态..."
if curl -s http://localhost:5173 > /dev/null; then
    echo "✅ 前端服务运行正常 (http://localhost:5173)"
else
    echo "❌ 前端服务未运行，请先启动: cd frontend && npm run dev"
    exit 1
fi

# 检查后端服务是否运行
echo "2. 检查后端服务状态..."
if curl -s http://localhost:8080/api/v1/health > /dev/null; then
    echo "✅ 后端服务运行正常 (http://localhost:8080)"
else
    echo "❌ 后端服务未运行，请先启动: cd backend && go run main.go"
    exit 1
fi

echo ""
echo "🎯 表单布局优化总结："
echo "===================="
echo "✅ 全天任务模式："
echo "   - 只需要一个日期选择器"
echo "   - 标签显示为'任务日期'"
echo "   - 简化了用户操作"
echo ""
echo "✅ 非全天任务模式："
echo "   - 开始时间：日期 + 时间组合"
echo "   - 结束时间：日期 + 时间组合"
echo "   - 日期和时间并排显示，更直观"
echo "   - 时间预设按钮独立显示"
echo ""
echo "✅ 布局优化："
echo "   - 使用 flexbox 布局"
echo "   - 日期选择器占 60% 宽度"
echo "   - 时间选择器占 35% 宽度"
echo "   - 10px 间距，美观协调"
echo ""
echo "🔧 技术实现详情："
echo "===================="
echo "📅 全天任务逻辑："
echo "   - 开始时间：00:00:00"
echo "   - 结束时间：23:59:59"
echo "   - 自动设置为全天"
echo ""
echo "⏰ 非全天任务逻辑："
echo "   - 支持跨天时间段"
echo "   - 结束日期可选，默认同一天"
echo "   - 精确到分钟的时间选择"
echo ""
echo "🎨 样式优化："
echo "   - .datetime-group 容器"
echo "   - flex 布局，gap: 10px"
echo "   - 响应式宽度分配"
echo "   - 对齐方式：center"
echo ""
echo "🌐 访问地址："
echo "   - 前端：http://localhost:5173"
echo "   - 日历页面：http://localhost:5173/dashboard/calendar"
echo ""
echo "📝 测试步骤："
echo "1. 打开浏览器访问 http://localhost:5173"
echo "2. 登录后进入日历管理"
echo "3. 测试全天任务模式："
echo "   - 点击全天任务开关"
echo "   - 验证只显示一个日期选择器"
echo "   - 创建全天任务"
echo "4. 测试非全天任务模式："
echo "   - 关闭全天任务开关"
echo "   - 验证开始时间和结束时间的组合布局"
echo "   - 测试时间预设按钮"
echo "   - 创建跨天时间段任务"
echo "5. 测试表单验证："
echo "   - 必填字段验证"
echo "   - 日期时间格式验证"
echo "   - 错误提示显示"
echo ""
echo "🎯 预期结果："
echo "===================="
echo "✅ 全天任务表单简洁明了"
echo "✅ 非全天任务表单布局合理"
echo "✅ 日期时间组合显示美观"
echo "✅ 时间预设功能正常"
echo "✅ 跨天任务创建成功"
echo "✅ 表单验证工作正常"
echo ""
echo "✨ 现在日历表单布局更加直观和用户友好！"
